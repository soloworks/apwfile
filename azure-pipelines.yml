# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: go build ./apw
  displayName: 'Building apw'
# - script:
#     cd ./archive
#     go get -d
#     go build
#     cd ..
#   displayName: 'Building Archive Helper'
#   Windows Build: env GOOS=windows GOARCH=amd64 go build 

- script: |
    go get -d
    go build
  workingDirectory: './compilecfg'
  displayName: 'Building Compile Config package'

- script: |
    go get -d
    go build
  workingDirectory: './compilecfg/cli'
  displayName: 'Building Compile Config CLI Tool'

- script: |
    go get -d
    go build
  workingDirectory: './compilecfg/gcf'
  displayName: 'Building Compile Google Cloud Function'

- script: |
    go get -d
    go build
  workingDirectory: './compilelog'
  displayName: 'Building Compile Log package'

- script: |
    go get -d
    go build
  workingDirectory: './compilelog/cli'
  displayName: 'Building Compile Log CLI Tool'

- script: |
    go get -d
    go build
  workingDirectory: './compilelog/gcf'
  displayName: 'Building Compile Log Cloud Function'

- script: |
    go get -d
    go build
  workingDirectory: './ftp'
  displayName: 'Building FTP Helper'

- script: |
    go get -d
    go build
  workingDirectory: './studio'
  env:
    GOOS: 'windows'
    GOARCH: 'amd64'
  displayName: 'Building Studio Helper'
